{"version":3,"sources":["../app/app.js"],"names":["app","use","bodyParser","urlencoded","extended","json","meetup","get","req","res","status","data","message","all","error","port","process","env","PORT","listen","console","log"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA;AACA,IAAMA,GAAG,GAAG,uBAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,oBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQC,oBAAWG,IAAX,EAAR,E,CAEA;;AACAL,GAAG,CAACC,GAAJ,CAAQ,oBAAR,E,CAEA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBK,YAApB,E,CAEA;;AACAN,GAAG,CAACO,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACJ,IAAJ,CACE;AACEK,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,IAAI,EAAE,CAAC;AACLC,MAAAA,OAAO,EAAE;AADJ,KAAD;AAFR,GADF;AAQD,CATD,E,CAWA;;AACAZ,GAAG,CAACa,GAAJ,CAAQ,GAAR,EAAa,UAACL,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBK,IAAAA,MAAM,EAAE,GADW;AAEnBI,IAAAA,KAAK,EAAE;AACLF,MAAAA,OAAO,EAAE;AADJ;AAFY,GAArB;AAMD,CAPD,E,CASA;;AACA,IAAMG,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;;AACAlB,GAAG,CAACmB,MAAJ,CAAWJ,IAAX,EAAiB,YAAM;AACrB;AACAK,EAAAA,OAAO,CAACC,GAAR,kCAAsCN,IAAtC;AACD,CAHD,E,CAKA;;eACef,G","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport meetup from './routes/api';\n\n// Initialize express app\nconst app = express();\n\n// body-parser Middleware\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\n// cross origin resource sharing middleware\napp.use(cors());\n\n// Meet up  middleware\napp.use('/api/v1/', meetup);\n\n// Home page route\napp.get('/', (req, res) => {\n  res.json(\n    {\n      status: 200,\n      data: [{\n        message: 'Welcome to Questioner Home Route',\n      }],\n    },\n  );\n});\n\n// Handle non exist route with with proper message\napp.all('*', (req, res) => {\n  res.status(404).json({\n    status: 404,\n    error: {\n      message: 'Wrong request. Route does not exist',\n    },\n  });\n});\n\n// Define application port number\nconst port = process.env.PORT || 3000;\n\n// Start server\napp.listen(port, () => {\n  // eslint-disable no-console\n  console.log(`Server running on port ${port}`);\n});\n\n// expose app to be use in another file\nexport default app;\n"],"file":"app.js"}